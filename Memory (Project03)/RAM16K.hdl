// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    
    DMux4Way(in=load, sel=address[12..13], a=RAM4Kaload, b=RAM4Kbload, c=RAM4Kcload, d=RAM4Kdload);
    RAM4K(in=in, load=RAM4Kaload, address=address[0..11], out=RAM4Kaout);
    RAM4K(in=in, load=RAM4Kbload, address=address[0..11], out=RAM4Kbout);
    RAM4K(in=in, load=RAM4Kcload, address=address[0..11], out=RAM4Kcout);
    RAM4K(in=in, load=RAM4Kdload, address=address[0..11], out=RAM4Kdout);

    Mux4Way16(a=RAM4Kaout, b=RAM4Kbout, c=RAM4Kcout, d=RAM4Kdout, sel=address[12..13], out=out);
}